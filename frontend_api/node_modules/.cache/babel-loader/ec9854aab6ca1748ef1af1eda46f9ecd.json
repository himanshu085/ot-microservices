{"ast":null,"code":"import { shouldCreateSpan } from './utils';\nimport Span from '../span';\nvar eventPairs = [['redirectStart', 'redirectEnd', 'Redirect'], ['domainLookupStart', 'domainLookupEnd', 'Domain lookup'], ['connectStart', 'connectEnd', 'Making a connection to the server'], ['requestStart', 'responseEnd', 'Requesting and receiving the document'], ['domLoading', 'domInteractive', 'Parsing the document, executing sync. scripts'], ['domContentLoadedEventStart', 'domContentLoadedEventEnd', 'Fire \"DOMContentLoaded\" event'], ['loadEventStart', 'loadEventEnd', 'Fire \"load\" event']];\nfunction createNavigationTimingSpans(timings, baseTime, trStart, trEnd) {\n  var spans = [];\n  for (var i = 0; i < eventPairs.length; i++) {\n    var start = timings[eventPairs[i][0]];\n    var end = timings[eventPairs[i][1]];\n    if (!shouldCreateSpan(start, end, trStart, trEnd, baseTime)) {\n      continue;\n    }\n    var span = new Span(eventPairs[i][2], 'hard-navigation.browser-timing');\n    var data = null;\n    if (eventPairs[i][0] === 'requestStart') {\n      span.pageResponse = true;\n      data = {\n        url: location.origin\n      };\n    }\n    span._start = start - baseTime;\n    span.end(end - baseTime, data);\n    spans.push(span);\n  }\n  return spans;\n}\nexport { createNavigationTimingSpans };","map":null,"metadata":{},"sourceType":"module"}