{"ast":null,"code":"import { Promise } from './polyfills';\nvar slice = [].slice;\nvar isBrowser = typeof window !== 'undefined';\nvar PERF = isBrowser && typeof performance !== 'undefined' ? performance : {};\nfunction isCORSSupported() {\n  var xhr = new window.XMLHttpRequest();\n  return 'withCredentials' in xhr;\n}\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\nfunction bytesToHex(buffer) {\n  var hexOctets = [];\n  for (var _i = 0; _i < buffer.length; _i++) {\n    hexOctets.push(byteToHex[buffer[_i]]);\n  }\n  return hexOctets.join('');\n}\nvar destination = new Uint8Array(16);\nfunction rng() {\n  if (typeof crypto != 'undefined' && typeof crypto.getRandomValues == 'function') {\n    return crypto.getRandomValues(destination);\n  } else if (typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function') {\n    return msCrypto.getRandomValues(destination);\n  }\n  return destination;\n}\nfunction generateRandomId(length) {\n  var id = bytesToHex(rng());\n  return id.substr(0, length);\n}\nfunction getDtHeaderValue(span) {\n  var dtVersion = '00';\n  var dtUnSampledFlags = '00';\n  var dtSampledFlags = '01';\n  if (span && span.traceId && span.id && span.parentId) {\n    var flags = span.sampled ? dtSampledFlags : dtUnSampledFlags;\n    var id = span.sampled ? span.id : span.parentId;\n    return dtVersion + '-' + span.traceId + '-' + id + '-' + flags;\n  }\n}\nfunction parseDtHeaderValue(value) {\n  var parsed = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})$/.exec(value);\n  if (parsed) {\n    var flags = parsed[4];\n    var sampled = flags !== '00';\n    return {\n      traceId: parsed[2],\n      id: parsed[3],\n      sampled: sampled\n    };\n  }\n}\nfunction isDtHeaderValid(header) {\n  return /^[\\da-f]{2}-[\\da-f]{32}-[\\da-f]{16}-[\\da-f]{2}$/.test(header) && header.slice(3, 35) !== '00000000000000000000000000000000' && header.slice(36, 52) !== '0000000000000000';\n}\nfunction getTSHeaderValue(_ref) {\n  var sampleRate = _ref.sampleRate;\n  if (typeof sampleRate !== 'number' || String(sampleRate).length > 256) {\n    return;\n  }\n  var NAMESPACE = 'es';\n  var SEPARATOR = '=';\n  return \"\" + NAMESPACE + SEPARATOR + \"s:\" + sampleRate;\n}\nfunction setRequestHeader(target, name, value) {\n  if (typeof target.setRequestHeader === 'function') {\n    target.setRequestHeader(name, value);\n  } else if (target.headers && typeof target.headers.append === 'function') {\n    target.headers.append(name, value);\n  } else {\n    target[name] = value;\n  }\n}\nfunction checkSameOrigin(source, target) {\n  var isSame = false;\n  if (typeof target === 'string') {\n    isSame = source === target;\n  } else if (target && typeof target.test === 'function') {\n    isSame = target.test(source);\n  } else if (Array.isArray(target)) {\n    target.forEach(function (t) {\n      if (!isSame) {\n        isSame = checkSameOrigin(source, t);\n      }\n    });\n  }\n  return isSame;\n}\nfunction isPlatformSupported() {\n  return isBrowser && typeof Set === 'function' && typeof JSON.stringify === 'function' && PERF && typeof PERF.now === 'function' && isCORSSupported();\n}\nfunction setLabel(key, value, obj) {\n  if (!obj || !key) return;\n  var skey = removeInvalidChars(key);\n  var valueType = typeof value;\n  if (value != undefined && valueType !== 'boolean' && valueType !== 'number') {\n    value = String(value);\n  }\n  obj[skey] = value;\n  return obj;\n}\nfunction getServerTimingInfo(serverTimingEntries) {\n  if (serverTimingEntries === void 0) {\n    serverTimingEntries = [];\n  }\n  var serverTimingInfo = [];\n  var entrySeparator = ', ';\n  var valueSeparator = ';';\n  for (var _i2 = 0; _i2 < serverTimingEntries.length; _i2++) {\n    var _serverTimingEntries$ = serverTimingEntries[_i2],\n      name = _serverTimingEntries$.name,\n      duration = _serverTimingEntries$.duration,\n      description = _serverTimingEntries$.description;\n    var timingValue = name;\n    if (description) {\n      timingValue += valueSeparator + 'desc=' + description;\n    }\n    if (duration) {\n      timingValue += valueSeparator + 'dur=' + duration;\n    }\n    serverTimingInfo.push(timingValue);\n  }\n  return serverTimingInfo.join(entrySeparator);\n}\nfunction getTimeOrigin() {\n  return PERF.timing.fetchStart;\n}\nfunction stripQueryStringFromUrl(url) {\n  return url && url.split('?')[0];\n}\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction baseExtend(dst, objs, deep) {\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\n    var obj = objs[i];\n    if (!isObject(obj) && !isFunction(obj)) continue;\n    var keys = Object.keys(obj);\n    for (var j = 0, jj = keys.length; j < jj; j++) {\n      var key = keys[j];\n      var src = obj[key];\n      if (deep && isObject(src)) {\n        if (!isObject(dst[key])) dst[key] = Array.isArray(src) ? [] : {};\n        baseExtend(dst[key], [src], false);\n      } else {\n        dst[key] = src;\n      }\n    }\n  }\n  return dst;\n}\nfunction getElasticScript() {\n  if (typeof document !== 'undefined') {\n    var scripts = document.getElementsByTagName('script');\n    for (var i = 0, l = scripts.length; i < l; i++) {\n      var sc = scripts[i];\n      if (sc.src.indexOf('elastic') > 0) {\n        return sc;\n      }\n    }\n  }\n}\nfunction getCurrentScript() {\n  if (typeof document !== 'undefined') {\n    var currentScript = document.currentScript;\n    if (!currentScript) {\n      return getElasticScript();\n    }\n    return currentScript;\n  }\n}\nfunction extend() {\n  return baseExtend(Object.create(null), slice.call(arguments), false);\n}\nfunction merge() {\n  return baseExtend(Object.create(null), slice.call(arguments), true);\n}\nfunction isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\nfunction noop() {}\nfunction find(array, predicate, thisArg) {\n  if (array == null) {\n    throw new TypeError('array is null or not defined');\n  }\n  var o = Object(array);\n  var len = o.length >>> 0;\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate must be a function');\n  }\n  var k = 0;\n  while (k < len) {\n    var kValue = o[k];\n    if (predicate.call(thisArg, kValue, k, o)) {\n      return kValue;\n    }\n    k++;\n  }\n  return undefined;\n}\nfunction removeInvalidChars(key) {\n  return key.replace(/[.*\"]/g, '_');\n}\nfunction getLatestSpan(spans, typeFilter) {\n  var latestSpan = null;\n  for (var _i3 = 0; _i3 < spans.length; _i3++) {\n    var span = spans[_i3];\n    if (typeFilter && typeFilter(span.type) && (!latestSpan || latestSpan._end < span._end)) {\n      latestSpan = span;\n    }\n  }\n  return latestSpan;\n}\nfunction getLatestNonXHRSpan(spans) {\n  return getLatestSpan(spans, function (type) {\n    return String(type).indexOf('external') === -1;\n  });\n}\nfunction getLatestXHRSpan(spans) {\n  return getLatestSpan(spans, function (type) {\n    return String(type).indexOf('external') !== -1;\n  });\n}\nfunction getEarliestSpan(spans) {\n  var earliestSpan = spans[0];\n  for (var _i4 = 1; _i4 < spans.length; _i4++) {\n    var span = spans[_i4];\n    if (earliestSpan._start > span._start) {\n      earliestSpan = span;\n    }\n  }\n  return earliestSpan;\n}\nfunction now() {\n  return PERF.now();\n}\nfunction getTime(time) {\n  return typeof time === 'number' && time >= 0 ? time : now();\n}\nfunction getDuration(start, end) {\n  if (isUndefined(end) || isUndefined(start)) {\n    return null;\n  }\n  return parseInt(end - start);\n}\nfunction scheduleMacroTask(callback) {\n  setTimeout(callback, 0);\n}\nfunction scheduleMicroTask(callback) {\n  Promise.resolve().then(callback);\n}\nfunction isPerfTimelineSupported() {\n  return typeof PERF.getEntriesByType === 'function';\n}\nfunction isPerfTypeSupported(type) {\n  return typeof PerformanceObserver !== 'undefined' && PerformanceObserver.supportedEntryTypes && PerformanceObserver.supportedEntryTypes.indexOf(type) >= 0;\n}\nfunction isPerfInteractionCountSupported() {\n  return 'interactionCount' in performance;\n}\nfunction isBeaconInspectionEnabled() {\n  var flagName = '_elastic_inspect_beacon_';\n  if (sessionStorage.getItem(flagName) != null) {\n    return true;\n  }\n  if (!window.URL || !window.URLSearchParams) {\n    return false;\n  }\n  try {\n    var parsedUrl = new URL(window.location.href);\n    var isFlagSet = parsedUrl.searchParams.has(flagName);\n    if (isFlagSet) {\n      sessionStorage.setItem(flagName, true);\n    }\n    return isFlagSet;\n  } catch (e) {}\n  return false;\n}\nfunction isRedirectInfoAvailable(timing) {\n  return timing.redirectStart > 0;\n}\nexport { extend, merge, isUndefined, noop, baseExtend, bytesToHex, isCORSSupported, isObject, isFunction, isPlatformSupported, isDtHeaderValid, parseDtHeaderValue, getServerTimingInfo, getDtHeaderValue, getTSHeaderValue, getCurrentScript, getElasticScript, getTimeOrigin, generateRandomId, getEarliestSpan, getLatestNonXHRSpan, getLatestXHRSpan, getDuration, getTime, now, rng, checkSameOrigin, scheduleMacroTask, scheduleMicroTask, setLabel, setRequestHeader, stripQueryStringFromUrl, find, removeInvalidChars, PERF, isPerfTimelineSupported, isBrowser, isPerfTypeSupported, isPerfInteractionCountSupported, isBeaconInspectionEnabled, isRedirectInfoAvailable };","map":null,"metadata":{},"sourceType":"module"}