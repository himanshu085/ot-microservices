{"ast":null,"code":"export var globalState = {\n  fetchInProgress: false\n};\nexport function apmSymbol(name) {\n  return '__apm_symbol__' + name;\n}\nfunction isPropertyWritable(propertyDesc) {\n  if (!propertyDesc) {\n    return true;\n  }\n  if (propertyDesc.writable === false) {\n    return false;\n  }\n  return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nfunction attachOriginToPatched(patched, original) {\n  patched[apmSymbol('OriginalDelegate')] = original;\n}\nexport function patchMethod(target, name, patchFn) {\n  var proto = target;\n  while (proto && !proto.hasOwnProperty(name)) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  if (!proto && target[name]) {\n    proto = target;\n  }\n  var delegateName = apmSymbol(name);\n  var delegate;\n  if (proto && !(delegate = proto[delegateName])) {\n    delegate = proto[delegateName] = proto[name];\n    var desc = proto && Object.getOwnPropertyDescriptor(proto, name);\n    if (isPropertyWritable(desc)) {\n      var patchDelegate = patchFn(delegate, delegateName, name);\n      proto[name] = function () {\n        return patchDelegate(this, arguments);\n      };\n      attachOriginToPatched(proto[name], delegate);\n    }\n  }\n  return delegate;\n}\nexport var XHR_IGNORE = apmSymbol('xhrIgnore');\nexport var XHR_SYNC = apmSymbol('xhrSync');\nexport var XHR_URL = apmSymbol('xhrURL');\nexport var XHR_METHOD = apmSymbol('xhrMethod');","map":null,"metadata":{},"sourceType":"module"}