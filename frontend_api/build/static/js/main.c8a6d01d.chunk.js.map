{"version":3,"sources":["SiteWrapper.react.js","EmployeeData.js","HomePage.react.js","EmployeeForm.js","EmployeeList.js","AttendanceForm.js","AttendanceList.js","ListSalary.js","App.react.js","index.js"],"names":["navBarItems","value","to","icon","LinkComponent","withRouter","NavLink","useExact","SiteWrapper","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","notificationsObjects","unread","avatarURL","message","React","time","_inherits","_createClass","key","_this2","unreadCount","reduce","a","v","Site","Wrapper","headerProps","href","alt","imageURL","navItems","Nav","Item","type","className","notificationsTray","markAllAsRead","setState","map","_objectSpread","setTimeout","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","footerProps","links","note","copyright","nav","Grid","Col","auto","List","Button","size","outline","color","RootComponent","props","children","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","d","bind","l","TypeError","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","generateResult","input","undefined","ListAllEmployees","_useState","useState","_useState2","_slicedToArray","stats","handleStats","FetchData","_ref","_asyncToGenerator","_callee","data","_context","fetch","json","useEffect","empData","sm","StatsCard","layout","movement","total","label","ListEmployeeActiveEmployee","_useState3","_useState4","_ref2","_callee2","_context2","ListEmployeeInActiveEmployee","_useState5","_useState6","_ref3","_callee3","_context3","RoleDistribution","_useState7","_useState8","_ref4","_callee4","_context4","Card","Header","Title","Body","C3Chart","style","height","columns","colors","data1","data2","names","legend","show","padding","bottom","top","LocationDistribution","_useState9","_useState0","_ref5","_callee5","_context5","data3","data4","StatusDistribution","_useState1","_useState10","_ref6","_callee6","_context6","Home","Page","Content","title","Row","cards","FormikApp","withFormik","mapPropsToValues","id","name","address","email","phone_number","designation","department","status","office_location","joining_date","handleSubmit","values","resetForm","setSubmitting","method","body","JSON","stringify","headers","Content-Type","then","res","resJson","console","log","alert","response","catch","error","text","_x","err","finally","handleChange","errors","touched","isSubmitting","md","lg","Form","onSubmit","FormGroup","Label","for","Input","onChange","placeholder","annual_package","job_role","location","disabled","ListEmployee","loading","ok","Error","_this$state","createElement","Table","ColHeader","item","Component","date","setErrors","Accept","url","toString","loadData","ListSalary","salary","toLocaleString","processDate","App","Router","Switch","ApmRoute","exact","path","component","HomePage","EmployeeForm","EmployeeList","AttendanceForm","ListAttendance","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c8a6d01d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  List,\n  Button,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n  +useExact?: boolean,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\nconst navBarItems: Array<navItem> = [\n  {\n    value: \"Overview\",\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  },\n  {\n    value: \"Add Employee\",\n    to: \"/employee-add\",\n    icon: \"user-plus\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  },\n  {\n    value: \"List Employee\",\n    to: \"/employee-list\",\n    icon: \"users\",\n    LinkComponent: withRouter(NavLink),\n  },\n  {\n    value: \"Add Attendance\",\n    to: \"/attendance-add\",\n    icon: \"book-open\",\n    LinkComponent: withRouter(NavLink),\n  },\n  {\n    value: \"List Attendance\",\n    to: \"/attendance-list\",\n    icon: \"book\",\n    LinkComponent: withRouter(NavLink),\n  },\n  {\n    value: \"Salary\",\n    to: \"/salary-list\",\n    icon: \"dollar-sign\",\n    LinkComponent: withRouter(NavLink),\n  },\n];\n\nclass SiteWrapper extends React.Component<Props, State> {\n  state = {\n    notificationsObjects: [\n      {\n        unread: true,\n        avatarURL: \"demo/faces/male/41.jpg\",\n        message: (\n          <React.Fragment>\n            <strong>Nathan</strong> pushed new commit: Fix page load performance\n            issue.\n          </React.Fragment>\n        ),\n        time: \"10 minutes ago\",\n      },\n      {\n        unread: true,\n        avatarURL: \"demo/faces/female/1.jpg\",\n        message: (\n          <React.Fragment>\n            <strong>Alice</strong> started new task: Tabler UI design.\n          </React.Fragment>\n        ),\n        time: \"1 hour ago\",\n      },\n      {\n        unread: false,\n        avatarURL: \"demo/faces/female/18.jpg\",\n        message: (\n          <React.Fragment>\n            <strong>Rose</strong> deployed new version of NodeJS REST Api // V3\n          </React.Fragment>\n        ),\n        time: \"2 hours ago\",\n      },\n    ],\n  };\n\n  render(): React.Node {\n    const notificationsObjects = this.state.notificationsObjects || [];\n    const unreadCount = this.state.notificationsObjects.reduce(\n      (a, v) => a || v.unread,\n      false\n    );\n    return (\n      <Site.Wrapper\n        headerProps={{\n          href: \"/\",\n          alt: \"\",\n          imageURL: \"https://www.buildpiper.io/wp-content/uploads/2022/05/logo_black.png\",\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n            </Nav.Item>\n          ),\n          notificationsTray: {\n            notificationsObjects,\n            markAllAsRead: () =>\n              this.setState(\n                () => ({\n                  notificationsObjects: this.state.notificationsObjects.map(\n                    v => ({ ...v, unread: false })\n                  ),\n                }),\n                () =>\n                  setTimeout(\n                    () =>\n                      this.setState({\n                        notificationsObjects: this.state.notificationsObjects.map(\n                          v => ({ ...v, unread: true })\n                        ),\n                      }),\n                    5000\n                  )\n              ),\n            unread: unreadCount,\n          },\n        }}\n        navProps={{ itemsObjects: navBarItems }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          links: [\n            <a href=\"#\">First Link</a>,\n            <a href=\"#\">Second Link</a>,\n            <a href=\"#\">Third Link</a>,\n            <a href=\"#\">Fourth Link</a>,\n            <a href=\"#\">Five Link</a>,\n            <a href=\"#\">Sixth Link</a>,\n            <a href=\"#\">Seventh Link</a>,\n            <a href=\"#\">Eigth Link</a>,\n          ],\n          note:\n            \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List>\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button>\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n        {this.props.children}\n      </Site.Wrapper>\n    );\n  }\n}\n\nexport default SiteWrapper;\n","import { useState, useEffect } from 'react';\nimport react, * as React from \"react\";\nimport {Grid, StatsCard, Card, colors} from 'tabler-react';\nimport C3Chart from \"react-c3js\";\n\nfunction generateResult(input) {\n  if (input === undefined) {\n    return 0\n  } else {\n    return input\n  }\n}\n\n\nexport function ListAllEmployees() {\n    const [stats, handleStats] = useState([]);\n\n    const FetchData = async () => {\n      const data = await fetch('/employee/search/all');\n      const stats = await data.json();\n      handleStats(stats)  \n    }\n  \n    useEffect(() => {\n      FetchData()\n    }, [])\n    const empData = stats.length\n    \n    return (\n      <Grid.Col sm={3}>\n        <StatsCard \n            layout={1} \n            movement={0} \n            total={empData} \n            label=\"Total Employees\" \n        />\n      </Grid.Col>\n    )\n}\n\nexport function ListEmployeeActiveEmployee() {\n  const [stats, handleStats] = useState([]);\n\n  const FetchData = async () => {\n    const data = await fetch('/employee/search/status');\n    const stats = await data.json();\n    handleStats(stats)  \n  }\n\n  useEffect(() => {\n    FetchData()\n  }, [])\n  const empData = stats\n\n  return (\n    <Grid.Col sm={3}>\n    <StatsCard\n      layout={1}\n      movement={0}\n      total={generateResult(empData[\"Current Employee\"])}\n      label=\"Active Employees\"\n    />\n    </Grid.Col>\n  )\n}\n\nexport function ListEmployeeInActiveEmployee() {\n  const [stats, handleStats] = useState([]);\n\n  const FetchData = async () => {\n    const data = await fetch('/employee/search/status');\n    const stats = await data.json();\n    handleStats(stats)  \n  }\n\n  useEffect(() => {\n    FetchData()\n  }, [])\n  const empData = stats\n\n  return (\n    <Grid.Col sm={3}>\n    <StatsCard\n      layout={1}\n      movement={0}\n      total={generateResult(empData[\"Ex-Employee\"])}\n      label=\"Ex-Employees\"\n    />\n    </Grid.Col>\n  )\n}\n\nexport function RoleDistribution() {\n  const [stats, handleStats] = useState([]);\n\n  const FetchData = async () => {\n    const data = await fetch('/employee/search/roles');\n    const stats = await data.json();\n    handleStats(stats)  \n  }\n\n  useEffect(() => {\n    FetchData()\n  }, [])\n  const empData = stats\n\n  return (\n      <Grid.Col sm={4}>\n      <Card>\n        <Card.Header>\n          <Card.Title>Job Role Distribution</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <C3Chart\n            style={{ height: \"12rem\" }}\n            data={{\n              columns: [\n                // each columns data\n                [\"DevOps\", generateResult(empData[\"DevOps\"])],\n                [\"Developer\", generateResult(empData[\"Developer\"])],\n              ],\n              type: \"donut\", // default type of chart\n              colors: {\n                data1: colors[\"green\"],\n                data2: colors[\"green-light\"],\n              },\n              names: {\n                // name of each serie\n                data1: \"Maximum\",\n                data2: \"Minimum\",\n              },\n            }}\n            legend={{\n              show: false, //hide legend\n            }}\n            padding={{\n              bottom: 0,\n              top: 0,\n            }}\n          />\n        </Card.Body>\n      </Card>\n    </Grid.Col>\n  )\n}\n\nexport function LocationDistribution() {\n  const [stats, handleStats] = useState([]);\n\n  const FetchData = async () => {\n    const data = await fetch('/employee/search/location');\n    const stats = await data.json();\n    handleStats(stats)  \n  }\n\n  useEffect(() => {\n    FetchData()\n  }, [])\n  const empData = stats\n\n  return (\n    <Grid.Col sm={4}>\n    <Card>\n      <Card.Header>\n        <Card.Title>Locations Distribution</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <C3Chart\n          style={{ height: \"12rem\" }}\n          data={{\n            columns: [\n              // each columns data\n              [\"Delhi\", generateResult(empData[\"Delhi\"])],\n              [\"Bangalore\", generateResult(empData[\"Bangalore\"])],\n              [\"Hyederabad\", generateResult(empData[\"Hyderabad\"])],\n              [\"Newyork\", generateResult(empData[\"Newyork\"])],\n            ],\n            type: \"donut\", // default type of chart\n            colors: {\n              data1: colors[\"blue-darker\"],\n              data2: colors[\"blue\"],\n              data3: colors[\"blue-light\"],\n              data4: colors[\"blue-lighter\"],\n            },\n            names: {\n              // name of each serie\n              data1: \"A\",\n              data2: \"B\",\n              data3: \"C\",\n              data4: \"D\",\n            },\n          }}\n          legend={{\n            show: false, //hide legend\n          }}\n          padding={{\n            bottom: 0,\n            top: 0,\n          }}\n        />\n      </Card.Body>\n    </Card>\n  </Grid.Col>\n  )\n}\n\nexport function StatusDistribution() {\n  const [stats, handleStats] = useState([]);\n\n  const FetchData = async () => {\n    const data = await fetch('/employee/search/status');\n    const stats = await data.json();\n    handleStats(stats)  \n  }\n\n  useEffect(() => {\n    FetchData()\n  }, [])\n  const empData = stats\n\n  return (\n      <Grid.Col sm={4}>\n      <Card>\n        <Card.Header>\n          <Card.Title>Employees Distribution</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <C3Chart\n            style={{ height: \"12rem\" }}\n            data={{\n              columns: [\n                // each columns data\n                [\"Current Employees\", generateResult(empData[\"Current Employee\"])],\n                [\"Ex-Employees\", generateResult(empData[\"Ex-Employee\"])],\n              ],\n              type: \"donut\", // default type of chart\n              colors: {\n                data1: colors[\"blue-darker\"],\n                data2: colors[\"blue\"],\n                data3: colors[\"blue-light\"],\n                data4: colors[\"blue-lighter\"],\n              },\n              names: {\n                // name of each serie\n                data1: \"A\",\n                data2: \"B\",\n                data3: \"C\",\n                data4: \"D\",\n              },\n            }}\n            legend={{\n              show: false, //hide legend\n            }}\n            padding={{\n              bottom: 0,\n              top: 0,\n            }}\n          />\n        </Card.Body>\n      </Card>\n    </Grid.Col>\n  )\n}\n","// @flow\n\nimport * as React from \"react\";\n\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { ListAllEmployees, \n  ListEmployeeActiveEmployee,\n  ListEmployeeInActiveEmployee,\n  RoleDistribution,\n  LocationDistribution,\n  StatusDistribution } from './EmployeeData';\n\nfunction Home() {\n  return (\n    <SiteWrapper>\n      <Page.Content title=\"Dashboard\">\n        <Grid.Row cards={true}>\n          <ListAllEmployees/>\n          <ListEmployeeActiveEmployee/>\n          <ListEmployeeInActiveEmployee/>\n          <Grid.Col sm={3}>\n            <StatsCard\n              layout={1}\n              movement={0}\n              total=\"4\"\n              label=\"Office Locations\"\n            />\n          </Grid.Col>\n          <Grid.Col>\n            <Grid.Row cards=\"true\">\n              <RoleDistribution/>\n              <StatusDistribution/>\n              <LocationDistribution/>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Page.Content>\n    </SiteWrapper>\n  );\n}\n\nexport default Home;","\nimport react, * as React from \"react\";\nimport { Page, Grid } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { withFormik } from 'formik';\n\nconst EmployeeForm = ({ values, handleChange, handleSubmit, errors, touched, isSubmitting }) => {\n  return (\n    <SiteWrapper>\n      <Page.Card title=\"Employee Registration\"></Page.Card>\n      <Grid.Col md={6} lg={6} className=\"align-self-center\">\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            {touched.id && errors.id && <p className=\"red\">{errors.id}</p>}\n            <Label for=\"id\">Employee ID</Label>\n            <Input\n              type=\"text\"\n              name=\"id\"\n              value={values.id}\n              onChange={handleChange}\n              id=\"id\"\n              placeholder=\"Employee ID\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.name && errors.name && <p className=\"red\">{errors.name}</p>}\n            <Label for=\"name\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              id=\"name\"\n              placeholder=\"Employee Name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.address && errors.address && <p className=\"red\">{errors.address}</p>}\n            <Label for=\"address\">Address</Label>\n            <Input\n              type=\"text\"\n              name=\"address\"\n              value={values.address}\n              onChange={handleChange}\n              id=\"address\"\n              placeholder=\"Employee Address\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.email && errors.email && <p className=\"red\">{errors.email}</p>}\n            <Label for=\"email\">Email ID</Label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              id=\"email\"\n              placeholder=\"Email ID\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.phone_number && errors.phone_number && <p className=\"red\">{errors.phone_number}</p>}\n            <Label for=\"phone_number\">Phone Number</Label>\n            <Input\n              type=\"text\"\n              name=\"phone_number\"\n              value={values.phone_number}\n              onChange={handleChange}\n              id=\"phone_number\"\n              placeholder=\"Phone Number\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.annual_package && errors.annual_package && <p className=\"red\">{errors.annual_package}</p>}\n            <Label for=\"annual_package\">Annual Package</Label>\n            <Input\n              type=\"number\"\n              name=\"annual_package\"\n              value={values.annual_package}\n              onChange={handleChange}\n              id=\"annual_package\"\n              placeholder=\"Annual Package\"\n            />\n          </FormGroup>\n          <FormGroup>\n            {touched.job_role && errors.job_role && <p className=\"red\">{errors.job_role}</p>}\n            <Label for=\"job_role\">Job Role</Label>\n            <Input\n              type=\"select\"\n              name=\"job_role\"\n              id=\"job_role\"\n              value={values.job_role}\n              onChange={handleChange}\n            >\n              <option>Select Role</option>\n              <option>Developer</option>\n              <option>DevOps</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            {touched.status && errors.status && <p className=\"red\">{errors.status}</p>}\n            <Label for=\"status\">Status</Label>\n            <Input\n              type=\"select\"\n              name=\"status\"\n              id=\"status\"\n              value={values.status}\n              onChange={handleChange}\n            >\n              <option>Select Status</option>\n              <option>Ex-Employee</option>\n              <option>Current Employee</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            {touched.location && errors.location && <p className=\"red\">{errors.location}</p>}\n            <Label for=\"location\">Location</Label>\n            <Input\n              type=\"select\"\n              name=\"location\"\n              id=\"location\"\n              value={values.location}\n              onChange={handleChange}\n            >\n              <option>Select Location</option>\n              <option>Delhi</option>\n              <option>Bangalore</option>\n              <option>Hyderabad</option>\n              <option>Newyork</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            {touched.joining_date && errors.joining_date && <p className=\"red\">{errors.joining_date}</p>}\n            <Label for=\"joining_date\">Joining Date</Label>\n            <Input\n              type=\"date\"\n              name=\"joining_date\"\n              id=\"joining_date\"\n              placeholder=\"datetime placeholder\"\n              value={values.joining_date}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <Button color=\"primary\" disabled={isSubmitting}>Submit</Button>\n        </Form>\n      </Grid.Col>\n    </SiteWrapper>\n  );\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues() {\n    return {\n      id: '',\n      name: '',\n      address: '',\n      email: '',\n      phone_number: '',\n      designation: '',\n      department: '',\n      status: '',\n      office_location: '',\n      joining_date: ''\n    };\n  },\n\n  handleSubmit(values, { resetForm, setSubmitting }) {\n    fetch('http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:8082/api/v1/employee/create', {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(async res => {\n         const resJson = await res.json();\n         if (res.status === 200) {\n          console.log(\"Response:\", resJson);\n          alert(`Employee ${values.name} (${values.email} ${values.id}) created successfully!`);\n\n/*          fetch(`http://localhost:9200/employee-management/_doc/${values.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Basic ' + btoa('elastic:elastic')\n            },\n            body: JSON.stringify({\n              name: values.name,\n              email_id: values.email\n            })\n          });\n*/\n\nfetch('http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:5000/api/v1/notify', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    id: values.id,  // The employee ID\n    name: values.name,  // The employee's name\n    email: values.email  // The employee's email\n  })\n})\n.then(response => response.json())\n.then(data => {\n  console.log(data.message);\n  alert('Employee created and notification sent!');\n})\n.catch(error => console.error('Error:', error));\n          alert(\"Notification sent!\");\n          resetForm();\n        } else {\n          res.text().then(text => {\n            console.error(\"Failed:\", text);\n            alert(\"Error creating employee\");\n          });\n        }\n      })\n      .catch(err => {\n        console.error(\"Network error:\", err);\n        alert(\"Could not reach Employee API.\");\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  }\n})(EmployeeForm);\n\nexport default FormikApp;\n","import React from \"react\";\nimport { Page, Grid, Table } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper.react\";\n\nclass ListEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:8082/api/v1/employee/search/all\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to fetch\");\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"Fetched data:\", data);\n        this.setState({ data, loading: false });\n      })\n      .catch((err) => {\n        console.error(\"Fetch error:\", err);\n        this.setState({ error: err.message, loading: false });\n      });\n  }\n\n  render() {\n    const { data, loading, error } = this.state;\n\n    if (loading) {\n      return (\n        <SiteWrapper>\n          <Page.Card title=\"Employee List\">\n            <div>Loading...</div>\n          </Page.Card>\n        </SiteWrapper>\n      );\n    }\n\n    if (error) {\n      return (\n        <SiteWrapper>\n          <Page.Card title=\"Employee List\">\n            <div>Error: {error}</div>\n          </Page.Card>\n        </SiteWrapper>\n      );\n    }\n\n    return (\n      <SiteWrapper>\n        <Page.Card title=\"Employee List\">\n          <Grid.Col md={12}>\n            <Table>\n              <Table.Header>\n                <Table.ColHeader>Employee ID</Table.ColHeader>\n                <Table.ColHeader>Name</Table.ColHeader>\n                <Table.ColHeader>Email</Table.ColHeader>\n                <Table.ColHeader>Phone Number</Table.ColHeader>\n                <Table.ColHeader>Designation</Table.ColHeader>\n                <Table.ColHeader>Office Location</Table.ColHeader>\n              </Table.Header>\n              <Table.Body>\n                {data.map((item, i) => (\n                  <Table.Row key={item.id || i}>\n                    <Table.Col>{item.id}</Table.Col>\n                    <Table.Col>{item.name}</Table.Col>\n                    <Table.Col>{item.email}</Table.Col>\n                    <Table.Col>{item.phone_number}</Table.Col>\n                    <Table.Col>{item.designation}</Table.Col>\n                    <Table.Col>{item.office_location}</Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Grid.Col>\n        </Page.Card>\n      </SiteWrapper>\n    );\n  }\n}\n\nexport default ListEmployee;\n","import react, * as React from \"react\";\nimport { Page, Grid } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { withFormik } from 'formik';\n\nconst AttendanceForm = ({ values, handleChange, handleSubmit, errors, touched, isSubmitting }) => {\n  return (\n    <SiteWrapper>\n      <Page.Card\n            title=\"Employee Registration\"\n        ></Page.Card>\n        <Grid.Col md={6} lg={6} className=\"align-self-center\">\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            {touched.id && errors.id && <p className=\"red\">{errors.id}</p>}\n            <Label for=\"id\">Employee ID</Label>\n            <Input\n              type=\"text\"\n              name=\"id\"\n              value={values.id}\n              onChange={handleChange}\n              id=\"id\"\n              placeholder=\"Employee ID\"\n            />\n          </FormGroup>\n         <FormGroup>\n  {touched.name && errors.name && <p className=\"red\">{errors.name}</p>}\n  <Label for=\"name\">Name</Label>\n  <Input\n    type=\"text\"\n    name=\"name\"\n    id=\"name\"\n    placeholder=\"Employee Name\"\n    value={values.name}\n    onChange={handleChange}\n  />\n</FormGroup>\n\n           <FormGroup>\n            {touched.status && errors.status && <p className=\"red\">{errors.status}</p>}\n            <Label for=\"status\">Status</Label>\n            <Input type=\"select\" name=\"status\" id=\"status\" value={values.status} onChange={handleChange}>\n              <option>Select Status</option>\n              <option>Present</option>\n              <option>Absent</option>\n            </Input>\n          </FormGroup>\n\n          <FormGroup>\n            {touched.date && errors.date && <p className=\"red\">{errors.date}</p>}\n            <Label for=\"date\">Date</Label>\n            <Input\n              type=\"date\"\n              name=\"date\"\n              id=\"date\"\n              placeholder=\"datetime placeholder\"\n              value={values.date}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n        </Form>\n    </Grid.Col>\n    </SiteWrapper>\n  );\n}\n\nconst FormikApp = withFormik({\n//  mapPropsToValues({ username, password }) {\n  //  return { username, password }\n mapPropsToValues() {\n    return {\n      id: '',\n      name:'',\n      status: '',\n      date: ''\n    }\n  },\n  handleSubmit(values, { props, resetForm, setErrors, setSubmitting }) {\n    console.log(JSON.stringify(values))\n    fetch('http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:8080/api/v1/attendance/create', {\n      method: 'POST',\n      body: JSON.stringify({ id: values.id, name: values.name,status: values.status,date: values.date}),\n      headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n    }})\n  }\n})(AttendanceForm);\n\nexport default FormikApp\n","import react, * as React from \"react\";\nimport { Page, Grid, Table, Button } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper.react\";\n//import { withTransaction } from '@elastic/apm-rum-react';\n\nclass ListEmployee extends React.Component {\n        constructor(props) {\n                super(props)\n                this.state = { data: [] }\n        }\n\n        loadData() {\n                fetch('http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:8080/api/v1/attendance/search/all')\n                        .then(response => response.json())\n                        .then(data => {\n                                this.setState({data: data })\n                })\n                        .catch(err => console.error(this.props.url, err.toString()))\n        }\n\n        componentDidMount() {\n                this.loadData()\n        }\n\n  render() {\n      return (\n          <SiteWrapper>\n          <Page.Card\n              title=\"Attendance List\"\n          ></Page.Card>\n          <Grid.Col md={6} lg={10} className=\"align-self-center\">\n          <Table>\n            <Table.Header>\n                 <Table.ColHeader>Employee ID</Table.ColHeader>\n<Table.ColHeader>Employee Name</Table.ColHeader>\n     <Table.ColHeader>Status</Table.ColHeader>\n                 <Table.ColHeader>Date</Table.ColHeader>\n            </Table.Header>\n            <Table.Body>\n           { this.state.data.map((item, i) => {\n                return (\n                    <Table.Row>\n                        <Table.Col>{item.id}</Table.Col>\n<Table.Col>{item.name}</Table.Col>\n  <Table.Col>{item.status}</Table.Col>\n                        <Table.Col>{item.date}</Table.Col>\n                    </Table.Row>\n                );\n                })\n            }\n            </Table.Body>\n            </Table>\n          </Grid.Col>\n          </SiteWrapper>\n      );\n  }\n}\n\nexport default ListEmployee\n//export default withTransaction('ListEmployee', 'component')(ListEmployee)\n","import React from \"react\";\nimport { Page, Grid, Table } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper.react\";\n\nclass ListSalary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://np-dev-otms-alb-831114106.us-west-2.elb.amazonaws.com:8083/api/v1/salary/search/all\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to fetch\");\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"Fetched data:\", data);\n        this.setState({ data, loading: false });\n      })\n      .catch((err) => {\n        console.error(\"Fetch error:\", err);\n        this.setState({ error: err.message, loading: false });\n      });\n  }\n\n  render() {\n    const { data, loading, error } = this.state;\n\n    if (loading) {\n      return (\n        <SiteWrapper>\n          <Page.Card title=\"Salary List\">\n            <div>Loading...</div>\n          </Page.Card>\n        </SiteWrapper>\n      );\n    }\n\n    if (error) {\n      return (\n        <SiteWrapper>\n          <Page.Card title=\"Salary List\">\n            <div>Error: {error}</div>\n          </Page.Card>\n        </SiteWrapper>\n      );\n    }\n\n    return (\n      <SiteWrapper>\n        <Page.Card title=\"Salary List\">\n          <Grid.Col md={12}>\n            <Table>\n              <Table.Header>\n                <Table.ColHeader>Employee ID</Table.ColHeader>\n                <Table.ColHeader>Name</Table.ColHeader>\n                <Table.ColHeader>Salary</Table.ColHeader>\n                <Table.ColHeader>Process Date</Table.ColHeader>\n                <Table.ColHeader>Status</Table.ColHeader>\n              </Table.Header>\n              <Table.Body>\n                {data.map((item, i) => (\n                  <Table.Row key={item.id || i}>\n                    <Table.Col>{item.id}</Table.Col>\n                    <Table.Col>{item.name}</Table.Col>\n                    <Table.Col>{item.salary.toLocaleString()}</Table.Col>\n                    <Table.Col>{item.processDate}</Table.Col>\n                    <Table.Col>{item.status}</Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Grid.Col>\n        </Page.Card>\n      </SiteWrapper>\n    );\n  }\n}\n\nexport default ListSalary;\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApmRoute } from '@elastic/apm-rum-react'\n//import { init as initApm } from \"@elastic/apm-rum\";\n\nimport HomePage from \"./HomePage.react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport EmployeeList from './EmployeeList';\nimport AttendanceForm from \"./AttendanceForm\";\nimport ListAttendance from './AttendanceList';\nimport ListSalary from './ListSalary';\n\nimport \"tabler-react/dist/Tabler.css\";\n\ntype Props = {||};\n\n//initApm({\n//  serverUrl: \"http://apm-server:8200\",\n//  serviceName: \"frontend\",\n//  instrument: \"false\"\n//});\n\nfunction App(props: Props): React.Node {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <ApmRoute exact path=\"/\" component={HomePage} />\n          <ApmRoute exact path=\"/employee-add\" component={EmployeeForm} />\n          <ApmRoute exact path=\"/employee-list\" component={EmployeeList} />\n          <ApmRoute exact path=\"/attendance-add\" component={AttendanceForm} />\n          <ApmRoute exact path=\"/attendance-list\" component={ListAttendance} />\n          <ApmRoute exact path=\"/salary-list\" component={ListSalary} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"./custom.css\";\n\nimport App from \"./App.react\";\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement) {\n  ReactDOM.render(<App />, rootElement);\n} else {\n  throw new Error(\"Could not find root element to mount to!\");\n}\n"],"sourceRoot":""}